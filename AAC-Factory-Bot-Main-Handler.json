{
    "name": "AAC Factory Bot Main Handler - FIXED",
    "nodes": [
      {
        "parameters": {
          "updates": [
            "message",
            "callback_query"
          ]
        },
        "name": "Telegram Bot Trigger",
        "type": "n8n-nodes-base.telegramTrigger",
        "typeVersion": 1,
        "position": [240, 300],
        "credentials": {
          "telegramApi": {
            "id": "telegram-bot-credentials",
            "name": "Telegram Bot –êAC"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "const item = items[0].json;\nlet eventType = 'unknown';\nlet userId = null;\nlet chatId = null;\nlet messageText = '';\nlet callbackData = '';\nlet hasPhoto = false;\n\ntry {\n  if (item.message) {\n    userId = item.message.from.id;\n    chatId = item.message.chat.id;\n    messageText = item.message.text || '';\n    hasPhoto = !!(item.message.photo && item.message.photo.length > 0);\n    \n    const text = messageText.toLowerCase().trim();\n\n    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–ª—É—á—à–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥\n    if (text.startsWith('/start')) {\n      eventType = 'start';\n    } else if (text.startsWith('/–º–æ—è_—Å–º–µ–Ω–∞') || text.startsWith('/shift')) {\n      eventType = 'shift_management';\n    } else if (text.startsWith('/–±—Ä–∞–∫') || text.startsWith('/defect') || hasPhoto) {\n      eventType = 'defect_report';\n    } else if (text.startsWith('/—Ä–µ—Ü–µ–ø—Ç') || text.startsWith('/recipe')) {\n      eventType = 'recipe_search';\n    } else if (text.startsWith('/–∑–∞–≥—Ä—É–∑–∫–∞') || text.startsWith('/load') || text.startsWith('/–æ—Å—Ç–∞—Ç–∫–∏') || text.startsWith('/stock')) {\n      eventType = 'material_management';\n    } else if (text.startsWith('/–ø–æ–º–æ—â—å') || text.startsWith('/help')) {\n      eventType = 'help';\n    }\n\n  } else if (item.callback_query) {\n    userId = item.callback_query.from.id;\n    chatId = item.callback_query.message.chat.id;\n    callbackData = item.callback_query.data;\n\n    if (callbackData.startsWith('shift_')) {\n      eventType = 'shift_management';\n    } else if (callbackData.startsWith('defect_')) {\n      eventType = 'defect_report';\n    } else if (callbackData.startsWith('material_')) {\n      eventType = 'material_management';\n    }\n  }\n\n  // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö\n  if (!userId || !chatId) {\n    throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');\n  }\n\n  return [{\n    json: {\n      eventType: eventType,\n      userId: userId,\n      chatId: chatId,\n      messageText: messageText,\n      callbackData: callbackData,\n      hasPhoto: hasPhoto,\n      originalData: item\n    }\n  }];\n} catch (error) {\n  console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è:', error.message);\n  return [{\n    json: {\n      eventType: 'error',\n      error: error.message,\n      userId: userId,\n      chatId: chatId,\n      originalData: item\n    }\n  }];\n}"
        },
        "name": "Process Event - FIXED",
        "type": "n8n-nodes-base.code",
        "typeVersion": 1,
        "position": [460, 300]
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{$json.eventType}}",
                "value2": "start",
                "operation": "equals"
              },
              {
                "value1": "={{$json.eventType}}",
                "value2": "shift_management",
                "operation": "equals"
              },
              {
                "value1": "={{$json.eventType}}",
                "value2": "defect_report",
                "operation": "equals"
              },
              {
                "value1": "={{$json.eventType}}",
                "value2": "recipe_search",
                "operation": "equals"
              },
              {
                "value1": "={{$json.eventType}}",
                "value2": "material_management",
                "operation": "equals"
              },
              {
                "value1": "={{$json.eventType}}",
                "value2": "help",
                "operation": "equals"
              },
              {
                "value1": "={{$json.eventType}}",
                "value2": "error",
                "operation": "equals"
              }
            ]
          }
        },
        "name": "Route Events - FIXED",
        "type": "n8n-nodes-base.switch",
        "typeVersion": 1,
        "position": [680, 300]
      },
      {
        "parameters": {
          "chatId": "={{$json.chatId}}",
          "text": "üè≠ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –∑–∞–≤–æ–¥ –ê–ê–°!*\n\n–Ø –≤–∞—à —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º.\n\nüìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n/–º–æ—è_—Å–º–µ–Ω–∞ - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–º–µ–Ω–æ–π\n/—Ä–µ—Ü–µ–ø—Ç [–Ω–∞–∑–≤–∞–Ω–∏–µ] - –ü–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–∞\n/–±—Ä–∞–∫ - –°–æ–æ–±—â–∏—Ç—å –æ –±—Ä–∞–∫–µ (+ —Ñ–æ—Ç–æ)\n/–∑–∞–≥—Ä—É–∑–∫–∞ [–±—É–Ω–∫–µ—Ä] [–º–∞—Ç–µ—Ä–∏–∞–ª] [–∫–æ–ª-–≤–æ] - –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞\n/–æ—Å—Ç–∞—Ç–∫–∏ - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—Å—Ç–∞—Ç–∫–∏\n/–ø–æ–º–æ—â—å - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n‚ö° *–î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.*",
          "additionalFields": {
            "parse_mode": "Markdown",
            "reply_markup": "{\n  \"keyboard\": [\n    [{\"text\": \"üìä –ú–æ—è —Å–º–µ–Ω–∞\"}, {\"text\": \"üìã –†–µ—Ü–µ–ø—Ç—ã\"}],\n    [{\"text\": \"‚ö†Ô∏è –°–æ–æ–±—â–∏—Ç—å –æ –±—Ä–∞–∫–µ\"}, {\"text\": \"üì¶ –û—Å—Ç–∞—Ç–∫–∏\"}]\n  ],\n  \"resize_keyboard\": true,\n  \"one_time_keyboard\": false\n}"
          }
        },
        "name": "Send Welcome - ENHANCED",
        "type": "n8n-nodes-base.telegram",
        "typeVersion": 1,
        "position": [900, -120],
        "credentials": {
          "telegramApi": {
            "id": "telegram-bot-credentials",
            "name": "Telegram Bot –êAC"
          }
        }
      },
      {
        "parameters": {
          "workflowId": "{{ $vars.SHIFT_WORKFLOW_ID || '–£–ö–ê–ñ–ò–¢–ï_ID_WORKFLOW_–°–ú–ï–ù' }}"
        },
        "name": "Execute Shift Workflow",
        "type": "n8n-nodes-base.executeWorkflow",
        "typeVersion": 1,
        "position": [900, 20]
      },
      {
        "parameters": {
          "workflowId": "{{ $vars.DEFECT_WORKFLOW_ID || '–£–ö–ê–ñ–ò–¢–ï_ID_WORKFLOW_–î–ï–§–ï–ö–¢–û–í' }}"
        },
        "name": "Execute Defect Workflow",
        "type": "n8n-nodes-base.executeWorkflow",
        "typeVersion": 1,
        "position": [900, 180]
      },
      {
        "parameters": {
          "workflowId": "{{ $vars.RECIPE_WORKFLOW_ID || '–£–ö–ê–ñ–ò–¢–ï_ID_WORKFLOW_–†–ï–¶–ï–ü–¢–û–í' }}"
        },
        "name": "Execute Recipe Workflow",
        "type": "n8n-nodes-base.executeWorkflow",
        "typeVersion": 1,
        "position": [900, 340]
      },
      {
        "parameters": {
          "workflowId": "{{ $vars.MATERIAL_WORKFLOW_ID || '–£–ö–ê–ñ–ò–¢–ï_ID_WORKFLOW_–ú–ê–¢–ï–†–ò–ê–õ–û–í' }}"
        },
        "name": "Execute Material Workflow",
        "type": "n8n-nodes-base.executeWorkflow",
        "typeVersion": 1,
        "position": [900, 500]
      },
      {
        "parameters": {
          "chatId": "={{$json.chatId}}",
          "text": "üè≠ *–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –∑–∞–≤–æ–¥–∞ –ê–ê–°*\n\nüìã *–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n‚Ä¢ `/–º–æ—è_—Å–º–µ–Ω–∞` - –ù–∞—á–∞—Ç—å/–∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–º–µ–Ω—É, —É–π—Ç–∏ –Ω–∞ –æ–±–µ–¥\n‚Ä¢ `/—Ä–µ—Ü–µ–ø—Ç D500` - –ù–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é\n‚Ä¢ `/–±—Ä–∞–∫` - –°–æ–æ–±—â–∏—Ç—å –æ –¥–µ—Ñ–µ–∫—Ç–µ (–ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ)\n‚Ä¢ `/–∑–∞–≥—Ä—É–∑–∫–∞ –ë–¶1 —Ü–µ–º–µ–Ω—Ç 50` - –ó–∞–≥—Ä—É–∑–∏—Ç—å 50 —Ç–æ–Ω–Ω —Ü–µ–º–µ–Ω—Ç–∞ –≤ –±—É–Ω–∫–µ—Ä –ë–¶1\n‚Ä¢ `/–æ—Å—Ç–∞—Ç–∫–∏` - –ü–æ–∫–∞–∑–∞—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—Å—Ç–∞—Ç–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\n\nüí° *–°–æ–≤–µ—Ç—ã:*\n‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞\n‚Ä¢ –ü—Ä–∏ —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ –±—Ä–∞–∫–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ\n‚Ä¢ –£–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ç–æ—á–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ –±—É–Ω–∫–µ—Ä–æ–≤\n\n‚ùì –í–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã? –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é —Å–º–µ–Ω—ã.",
          "additionalFields": {
            "parse_mode": "Markdown"
          }
        },
        "name": "Send Help",
        "type": "n8n-nodes-base.telegram",
        "typeVersion": 1,
        "position": [900, 660],
        "credentials": {
          "telegramApi": {
            "id": "telegram-bot-credentials",
            "name": "Telegram Bot –êAC"
          }
        }
      },
      {
        "parameters": {
          "chatId": "={{$json.chatId}}",
          "text": "‚ùå *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞*\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n\n–û—à–∏–±–∫–∞: {{$json.error}}",
          "additionalFields": {
            "parse_mode": "Markdown"
          }
        },
        "name": "Send Error Message",
        "type": "n8n-nodes-base.telegram",
        "typeVersion": 1,
        "position": [900, 820],
        "credentials": {
          "telegramApi": {
            "id": "telegram-bot-credentials",
            "name": "Telegram Bot –êAC"
          }
        }
      }
    ],
    "connections": {
      "Telegram Bot Trigger": {
        "main": [[{"node": "Process Event - FIXED", "type": "main", "index": 0}]]
      },
      "Process Event - FIXED": {
        "main": [[{"node": "Route Events - FIXED", "type": "main", "index": 0}]]
      },
      "Route Events - FIXED": {
        "main": [
          [{"node": "Send Welcome - ENHANCED", "type": "main", "index": 0}],
          [{"node": "Execute Shift Workflow", "type": "main", "index": 0}],
          [{"node": "Execute Defect Workflow", "type": "main", "index": 0}],
          [{"node": "Execute Recipe Workflow", "type": "main", "index": 0}],
          [{"node": "Execute Material Workflow", "type": "main", "index": 0}],
          [{"node": "Send Help", "type": "main", "index": 0}],
          [{"node": "Send Error Message", "type": "main", "index": 0}]
        ]
      }
    }
  }
