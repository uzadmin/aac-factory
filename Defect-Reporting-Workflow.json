{
  "name": "Defect Reporting Workflow - FIXED",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "const originalData = $json.originalData;\nconst hasPhoto = $json.hasPhoto || false;\n\n// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–æ—Ç–æ –≤ —Ä–∞–∑–Ω—ã—Ö —á–∞—Å—Ç—è—Ö —Å–æ–æ–±—â–µ–Ω–∏—è\nif (!hasPhoto && (!originalData.message || !originalData.message.photo || originalData.message.photo.length === 0)) {\n  return { \n    error: 'missing_photo',\n    message: 'üì∏ *–¢—Ä–µ–±—É–µ—Ç—Å—è —Ñ–æ—Ç–æ –¥–µ—Ñ–µ–∫—Ç–∞*\\n\\n–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±—Ä–∞–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\\n\\n1Ô∏è‚É£ –°–¥–µ–ª–∞—Ç—å —á–µ—Ç–∫–æ–µ —Ñ–æ—Ç–æ –¥–µ—Ñ–µ–∫—Ç–∞\\n2Ô∏è‚É£ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é\\n3Ô∏è‚É£ –î–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)\\n\\nüí° *–ü—Ä–∏–º–µ—Ä:* –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é \"–¢—Ä–µ—â–∏–Ω–∞ –Ω–∞ –±–ª–æ–∫–µ, –∫—Ä–∏—Ç–∏—á–Ω–æ\"'\n  };\n}\n\nconst photo = originalData.message.photo;\nconst caption = originalData.message.caption || '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è';\nconst userId = originalData.message.from.id;\n\n// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ (–ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤ –º–∞—Å—Å–∏–≤–µ)\nconst bestPhoto = photo[photo.length - 1];\n\nlet defectType = 'other';\nlet severity = 'medium';\nlet productionLine = '–õ–∏–Ω–∏—è 1'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é\n\n// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–µ—Ñ–µ–∫—Ç–∞ –∏ –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏\nconst lowerCaption = caption.toLowerCase();\n\nif (lowerCaption.includes('—Ç—Ä–µ—â–∏–Ω–∞') || lowerCaption.includes('crack')) {\n  defectType = 'crack';\n} else if (lowerCaption.includes('—Ä–∞–∑–º–µ—Ä') || lowerCaption.includes('–≥–∞–±–∞—Ä–∏—Ç') || lowerCaption.includes('size')) {\n  defectType = 'size';\n} else if (lowerCaption.includes('—Ü–≤–µ—Ç') || lowerCaption.includes('color')) {\n  defectType = 'color';\n} else if (lowerCaption.includes('–ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å') || lowerCaption.includes('surface')) {\n  defectType = 'surface';\n} else if (lowerCaption.includes('–ø—Ä–æ—á–Ω–æ—Å—Ç—å') || lowerCaption.includes('strength')) {\n  defectType = 'strength';\n}\n\n// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏\nif (lowerCaption.includes('–∫—Ä–∏—Ç–∏—á–Ω–æ') || lowerCaption.includes('critical') || lowerCaption.includes('—Å—Ä–æ—á–Ω–æ')) {\n  severity = 'critical';\n} else if (lowerCaption.includes('–≤—ã—Å–æ–∫–∏–π') || lowerCaption.includes('high') || lowerCaption.includes('—Å–µ—Ä—å–µ–∑–Ω–æ')) {\n  severity = 'high';\n} else if (lowerCaption.includes('–Ω–∏–∑–∫–∏–π') || lowerCaption.includes('low') || lowerCaption.includes('–Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ')) {\n  severity = 'low';\n}\n\n// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ª–∏–Ω–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è\nif (lowerCaption.includes('–ª–∏–Ω–∏—è 2') || lowerCaption.includes('line 2')) {\n  productionLine = '–õ–∏–Ω–∏—è 2';\n} else if (lowerCaption.includes('–ª–∏–Ω–∏—è 3') || lowerCaption.includes('line 3')) {\n  productionLine = '–õ–∏–Ω–∏—è 3';\n}\n\nconsole.log(`–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ—Ñ–µ–∫—Ç–∞: —Ç–∏–ø=${defectType}, –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å=${severity}, –ª–∏–Ω–∏—è=${productionLine}`);\n\nreturn {\n    telegram_id: userId,\n    defect_type: defectType,\n    severity: severity,\n    description: caption,\n    photo_file_id: bestPhoto.file_id,\n    photo_size: bestPhoto.file_size || 0,\n    production_line: productionLine,\n    error: null\n};"
      },
      "name": "Process Defect Data - FIXED",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.error}}",
              "value2": "missing_photo",
              "operation": "equals"
            }
          ]
        }
      },
      "name": "Check Photo Error",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "chatId": "={{$input.item.json.chatId}}",
        "text": "={{$json.message}}",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "name": "Send Photo Error",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [900, 200]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT employee_id, full_name FROM employees WHERE telegram_id = ? AND is_active = 1;",
        "options": {
          "parameters": "=[{{$json.telegram_id}}]"
        }
      },
      "name": "Check Employee Exists",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 1,
      "position": [900, 400]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.length}}",
              "value2": 0,
              "operation": "equal"
            }
          ]
        }
      },
      "name": "Check Employee Found",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1120, 400]
    },
    {
      "parameters": {
        "chatId": "={{$input.item.json.chatId}}",
        "text": "‚ùå *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω*\\n\\n–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ –∏–ª–∏ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω.\\n\\nüìù –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫:\\n‚Ä¢ –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é —Å–º–µ–Ω—ã\\n‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–∏—Å—Ç–µ–º—ã\\n‚Ä¢ HR-–æ—Ç–¥–µ–ª—É\\n\\nüí° –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–æ–æ–±—â–∞—Ç—å –æ –¥–µ—Ñ–µ–∫—Ç–∞—Ö.",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "name": "Send Employee Error",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [1340, 340]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT shift_id FROM shifts WHERE employee_id = ? AND status IN ('active', 'lunch', 'break') ORDER BY shift_id DESC LIMIT 1;",
        "options": {
          "parameters": "=[{{$json[0].employee_id}}]"
        }
      },
      "name": "Get Current Shift",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 1,
      "position": [1340, 460]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO defects (shift_id, reporter_id, production_line, defect_type, severity, description, photo_file_id, status) VALUES (?, ?, ?, ?, ?, ?, ?, 'open');",
        "options": {
          "parameters": "=[{{$('Get Current Shift').item.json[0] ? $('Get Current Shift').item.json[0].shift_id : null}}, {{$('Check Employee Exists').item.json[0].employee_id}}, \"{{$('Process Defect Data - FIXED').item.json.production_line}}\", \"{{$('Process Defect Data - FIXED').item.json.defect_type}}\", \"{{$('Process Defect Data - FIXED').item.json.severity}}\", \"{{$('Process Defect Data - FIXED').item.json.description}}\", \"{{$('Process Defect Data - FIXED').item.json.photo_file_id}}\"]"
        }
      },
      "name": "Log Defect to MySQL - FIXED",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 1,
      "position": [1560, 460]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.affectedRows}}",
              "value2": 0,
              "operation": "equal"
            }
          ]
        }
      },
      "name": "Check Insert Success",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1780, 460]
    },
    {
      "parameters": {
        "chatId": "={{$input.item.json.chatId}}",
        "text": "‚ùå *–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è*\\n\\n–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–µ—Ñ–µ–∫—Ç–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.\\n\\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "name": "Send Insert Error",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [2000, 400]
    },
    {
      "parameters": {
        "jsCode": "const defectData = $('Process Defect Data - FIXED').item.json;\nconst employeeData = $('Check Employee Exists').item.json[0];\nconst insertResult = $('Log Defect to MySQL - FIXED').item.json;\n\n// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º\nlet severityIcon = '';\nlet severityText = '';\n\nswitch(defectData.severity) {\n  case 'critical':\n    severityIcon = 'üî¥';\n    severityText = '–ö–†–ò–¢–ò–ß–ù–û';\n    break;\n  case 'high':\n    severityIcon = 'üü†';\n    severityText = '–í—ã—Å–æ–∫–∞—è';\n    break;\n  case 'medium':\n    severityIcon = 'üü°';\n    severityText = '–°—Ä–µ–¥–Ω—è—è';\n    break;\n  case 'low':\n    severityIcon = 'üü¢';\n    severityText = '–ù–∏–∑–∫–∞—è';\n    break;\n  default:\n    severityIcon = '‚ö™';\n    severityText = '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞';\n}\n\nlet typeText = '';\nswitch(defectData.defect_type) {\n  case 'crack': typeText = '–¢—Ä–µ—â–∏–Ω–∞'; break;\n  case 'size': typeText = '–†–∞–∑–º–µ—Ä'; break;\n  case 'color': typeText = '–¶–≤–µ—Ç'; break;\n  case 'surface': typeText = '–ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å'; break;\n  case 'strength': typeText = '–ü—Ä–æ—á–Ω–æ—Å—Ç—å'; break;\n  default: typeText = '–î—Ä—É–≥–æ–µ';\n}\n\nconst confirmMessage = `‚úÖ *–ó–∞—è–≤–∫–∞ –æ –±—Ä–∞–∫–µ –ø—Ä–∏–Ω—è—Ç–∞*\\n\\nüìã **–î–µ—Ç–∞–ª–∏ –∑–∞—è–≤–∫–∏:**\\nüè≠ –õ–∏–Ω–∏—è: ${defectData.production_line}\\nüîß –¢–∏–ø –¥–µ—Ñ–µ–∫—Ç–∞: ${typeText}\\n${severityIcon} –ö—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å: ${severityText}\\nüë§ –°–æ—Ç—Ä—É–¥–Ω–∏–∫: ${employeeData.full_name}\\n‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}\\n\\nüìù **–û–ø–∏—Å–∞–Ω–∏–µ:**\\n${defectData.description}\\n\\nüéØ **–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:**\\n‚Ä¢ –ó–∞—è–≤–∫–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞ –≤ –æ—Ç–¥–µ–ª –∫–∞—á–µ—Å—Ç–≤–∞\\n‚Ä¢ –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ\\n‚Ä¢ –ü—Ä–∏ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –¥–µ—Ñ–µ–∫—Ç–∞—Ö –æ–∂–∏–¥–∞–π—Ç–µ –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞\\n\\nüìû –í–æ–ø—Ä–æ—Å—ã? –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é —Å–º–µ–Ω—ã.`;\n\nreturn { message: confirmMessage };"
      },
      "name": "Format Confirmation",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [2000, 520]
    },
    {
      "parameters": {
        "chatId": "={{$input.item.json.chatId}}",
        "text": "={{$json.message}}",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "name": "Confirm Defect Report - ENHANCED",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [2220, 520]
    },
    {
      "parameters": {
        "jsCode": "const defectData = $('Process Defect Data - FIXED').item.json;\n\n// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –¥–µ—Ñ–µ–∫—Ç–æ–≤\nif (defectData.severity === 'critical') {\n  return {\n    should_notify: true,\n    notification_message: `üö® *–ö–†–ò–¢–ò–ß–ù–´–ô –î–ï–§–ï–ö–¢ –û–ë–ù–ê–†–£–ñ–ï–ù*\\n\\nüè≠ –õ–∏–Ω–∏—è: ${defectData.production_line}\\nüîß –¢–∏–ø: ${defectData.defect_type}\\nüìù –û–ø–∏—Å–∞–Ω–∏–µ: ${defectData.description}\\n‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}\\n\\n‚ö° –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ!`\n  };\n}\n\nreturn { should_notify: false };"
      },
      "name": "Check Critical Notification",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [2220, 640]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.should_notify}}",
              "value2": true,
              "operation": "equal"
            }
          ]
        }
      },
      "name": "Should Send Notification",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [2440, 640]
    },
    {
      "parameters": {
        "chatId": "–ö–ê–ß–ï–°–¢–í–û_–ö–û–ù–¢–†–û–õ–¨_–ì–†–£–ü–ü–ê_ID",
        "text": "={{$json.notification_message}}",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "name": "Notify Quality Control",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [2660, 600]
    }
  ],
  "connections": {
    "Start": {
      "main": [[{"node": "Process Defect Data - FIXED", "type": "main", "index": 0}]]
    },
    "Process Defect Data - FIXED": {
      "main": [[{"node": "Check Photo Error", "type": "main", "index": 0}]]
    },
    "Check Photo Error": {
      "main": [
        [{"node": "Send Photo Error", "type": "main", "index": 0}],
        [{"node": "Check Employee Exists", "type": "main", "index": 0}]
      ]
    },
    "Check Employee Exists": {
      "main": [[{"node": "Check Employee Found", "type": "main", "index": 0}]]
    },
    "Check Employee Found": {
      "main": [
        [{"node": "Send Employee Error", "type": "main", "index": 0}],
        [{"node": "Get Current Shift", "type": "main", "index": 0}]
      ]
    },
    "Get Current Shift": {
      "main": [[{"node": "Log Defect to MySQL - FIXED", "type": "main", "index": 0}]]
    },
    "Log Defect to MySQL - FIXED": {
      "main": [[{"node": "Check Insert Success", "type": "main", "index": 0}]]
    },
    "Check Insert Success": {
      "main": [
        [{"node": "Send Insert Error", "type": "main", "index": 0}],
        [{"node": "Format Confirmation", "type": "main", "index": 0}]
      ]
    },
    "Format Confirmation": {
      "main": [
        [{"node": "Confirm Defect Report - ENHANCED", "type": "main", "index": 0}],
        [{"node": "Check Critical Notification", "type": "main", "index": 0}]
      ]
    },
    "Check Critical Notification": {
      "main": [[{"node": "Should Send Notification", "type": "main", "index": 0}]]
    },
    "Should Send Notification": {
      "main": [
        [{"node": "Notify Quality Control", "type": "main", "index": 0}]
      ]
    }
  }
}
