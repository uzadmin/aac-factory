{
    "name": "Shift Management Workflow - FIXED",
    "nodes": [
      {
        "parameters": {},
        "name": "Start",
        "type": "n8n-nodes-base.start",
        "typeVersion": 1,
        "position": [240, 300]
      },
      {
        "parameters": {
          "jsCode": "const callbackData = $json.callbackData || '';\nconst messageText = ($json.messageText || '').toLowerCase().trim();\nlet action = 'status'; // default action\n\n// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π\nif (callbackData === 'shift_start') {\n  action = 'start';\n} else if (callbackData === 'shift_end') {\n  action = 'end';\n} else if (callbackData === 'shift_lunch') {\n  action = 'lunch';\n} else if (callbackData === 'shift_return') {\n  action = 'return_from_lunch';\n} else if (messageText.includes('—Å–º–µ–Ω–∞') || messageText === 'üìä –º–æ—è —Å–º–µ–Ω–∞') {\n  action = 'status';\n}\n\nconsole.log(`–û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ —Å–º–µ–Ω—ã: ${action}`);\nreturn { ...$input.item.json, action: action };"
        },
        "name": "Determine Action - FIXED",
        "type": "n8n-nodes-base.code",
        "typeVersion": 1,
        "position": [460, 300]
      },
      {
        "parameters": {
          "operation": "get",
          "key": "=shift:{{$json.userId}}:current"
        },
        "name": "Check Current Shift Redis",
        "type": "n8n-nodes-base.redis",
        "typeVersion": 1,
        "position": [680, 300],
        "credentials": {
          "redis": {
            "id": "redis-credentials",
            "name": "Redis Local"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "string": [
              {
                "value1": "={{$('Determine Action - FIXED').item.json.action}}",
                "value2": "start",
                "operation": "equals"
              },
              {
                "value1": "={{$('Determine Action - FIXED').item.json.action}}",
                "value2": "end",
                "operation": "equals"
              },
              {
                "value1": "={{$('Determine Action - FIXED').item.json.action}}",
                "value2": "lunch",
                "operation": "equals"
              },
              {
                "value1": "={{$('Determine Action - FIXED').item.json.action}}",
                "value2": "return_from_lunch",
                "operation": "equals"
              },
              {
                "value1": "={{$('Determine Action - FIXED').item.json.action}}",
                "value2": "status",
                "operation": "equals"
              }
            ]
          }
        },
        "name": "Route Shift Action",
        "type": "n8n-nodes-base.switch",
        "typeVersion": 1,
        "position": [900, 300]
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "SELECT COUNT(*) as active_count FROM shifts WHERE employee_id = (SELECT employee_id FROM employees WHERE telegram_id = ?) AND status IN ('active', 'break', 'lunch');",
          "options": {
            "parameters": "=[{{$('Determine Action - FIXED').item.json.userId}}]"
          }
        },
        "name": "Check Existing Active Shift",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [1120, -120]
      },
      {
        "parameters": {
          "conditions": {
            "number": [
              {
                "value1": "={{$json[0].active_count}}",
                "value2": 0,
                "operation": "larger"
              }
            ]
          }
        },
        "name": "Check Has Active Shift",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [1340, -120]
      },
      {
        "parameters": {
          "chatId": "={{$('Determine Action - FIXED').item.json.chatId}}",
          "text": "‚ö†Ô∏è *–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è —Å–º–µ–Ω–∞*\\n\\n–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â—É—é —Å–º–µ–Ω—É –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –Ω–æ–≤–æ–π.\\n\\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/–º–æ—è_—Å–º–µ–Ω–∞` –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Å–º–µ–Ω–æ–π.",
          "additionalFields": {
            "parse_mode": "Markdown"
          }
        },
        "name": "Send Already Active Error",
        "type": "n8n-nodes-base.telegram",
        "typeVersion": 1,
        "position": [1560, -180]
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "INSERT INTO shifts (employee_id, shift_date, start_time, status) SELECT employee_id, CURDATE(), NOW(), 'active' FROM employees WHERE telegram_id = ?;",
          "options": {
            "parameters": "=[{{$('Determine Action - FIXED').item.json.userId}}]"
          }
        },
        "name": "Start New Shift MySQL",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [1560, -60]
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "SELECT shift_id, start_time FROM shifts WHERE employee_id = (SELECT employee_id FROM employees WHERE telegram_id = ?) AND status = 'active' ORDER BY shift_id DESC LIMIT 1;",
          "options": {
            "parameters": "=[{{$('Determine Action - FIXED').item.json.userId}}]"
          }
        },
        "name": "Get New Shift Info",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [1780, -60]
      },
      {
        "parameters": {
          "operation": "set",
          "key": "=shift:{{$('Determine Action - FIXED').item.json.userId}}:current",
          "value": "={{JSON.stringify({ shift_id: $json[0].shift_id, start_time: $json[0].start_time, status: 'active' })}}",
          "options": {
            "ttl": 43200
          }
        },
        "name": "Cache New Shift Data",
        "type": "n8n-nodes-base.redis",
        "typeVersion": 1,
        "position": [2000, -60]
      },
      {
        "parameters": {
          "jsCode": "// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö Redis\nconst redisValue = $('Check Current Shift Redis').item.json.value;\n\nif (!redisValue || redisValue === null) {\n  return {\n    error: true,\n    message: '‚ùå *–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–º–µ–Ω—ã –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è*\\n\\n–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Å–º–µ–Ω—É, –Ω–∞–∂–∞–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É.'\n  };\n}\n\ntry {\n  const shiftData = JSON.parse(redisValue);\n  if (!shiftData.shift_id) {\n    throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–º–µ–Ω—ã');\n  }\n  return {\n    error: false,\n    shift_id: shiftData.shift_id\n  };\n} catch (parseError) {\n  console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω—ã:', parseError);\n  return {\n    error: true,\n    message: '‚ùå *–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω—ã*\\n\\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω—ã.'\n  };\n}"
        },
        "name": "Validate End Shift Data",
        "type": "n8n-nodes-base.code",
        "typeVersion": 1,
        "position": [1120, 80]
      },
      {
        "parameters": {
          "conditions": {
            "boolean": [
              {
                "value1": "={{$json.error}}",
                "value2": true,
                "operation": "equal"
              }
            ]
          }
        },
        "name": "Check End Validation",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [1340, 80]
      },
      {
        "parameters": {
          "chatId": "={{$('Determine Action - FIXED').item.json.chatId}}",
          "text": "={{$json.message}}",
          "additionalFields": {
            "parse_mode": "Markdown"
          }
        },
        "name": "Send End Error",
        "type": "n8n-nodes-base.telegram",
        "typeVersion": 1,
        "position": [1560, 20]
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "UPDATE shifts SET end_time = NOW(), status = 'completed' WHERE shift_id = ?;",
          "options": {
            "parameters": "=[{{$json.shift_id}}]"
          }
        },
        "name": "End Shift MySQL - FIXED",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [1560, 140]
      },
      {
        "parameters": {
          "operation": "del",
          "key": "=shift:{{$('Determine Action - FIXED').item.json.userId}}:current"
        },
        "name": "Delete Shift from Redis",
        "type": "n8n-nodes-base.redis",
        "typeVersion": 1,
        "position": [1780, 140]
      },
      {
        "parameters": {
          "chatId": "={{$('Determine Action - FIXED').item.json.chatId}}",
          "text": "üèÅ *–°–º–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞*\\n\\n‚è∞ –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {{new Date().toLocaleString('ru-RU')}}\\n\\nüéØ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—É—é —Ä–∞–±–æ—Ç—É!\\nüíº –•–æ—Ä–æ—à–µ–≥–æ –æ—Ç–¥—ã—Ö–∞!",
          "additionalFields": {
            "parse_mode": "Markdown"
          }
        },
        "name": "Notify Shift End - ENHANCED",
        "type": "n8n-nodes-base.telegram",
        "typeVersion": 1,
        "position": [2000, 140]
      },
      {
        "parameters": {
          "jsCode": "// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–µ–¥–∞\nconst redisValue = $('Check Current Shift Redis').item.json.value;\n\nif (!redisValue || redisValue === null) {\n  return {\n    error: true,\n    message: '‚ùå *–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–º–µ–Ω—ã*\\n\\n–ù–∞—á–Ω–∏—Ç–µ —Å–º–µ–Ω—É, —á—Ç–æ–±—ã –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–π—Ç–∏ –Ω–∞ –æ–±–µ–¥.'\n  };\n}\n\ntry {\n  const shiftData = JSON.parse(redisValue);\n  \n  if (shiftData.status === 'lunch') {\n    return {\n      error: true,\n      message: 'üçΩÔ∏è *–í—ã —É–∂–µ –Ω–∞ –æ–±–µ–¥–µ*\\n\\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É \"–í–µ—Ä–Ω—É—Ç—å—Å—è —Å –æ–±–µ–¥–∞\" –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.'\n    };\n  }\n  \n  return {\n    error: false,\n    shift_data: shiftData\n  };\n} catch (parseError) {\n  return {\n    error: true,\n    message: '‚ùå *–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω—ã*\\n\\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.'\n  };\n}"
        },
        "name": "Validate Lunch Data",
        "type": "n8n-nodes-base.code",
        "typeVersion": 1,
        "position": [1120, 280]
      },
      {
        "parameters": {
          "conditions": {
            "boolean": [
              {
                "value1": "={{$json.error}}",
                "value2": true,
                "operation": "equal"
              }
            ]
          }
        },
        "name": "Check Lunch Validation",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [1340, 280]
      },
      {
        "parameters": {
          "chatId": "={{$('Determine Action - FIXED').item.json.chatId}}",
          "text": "={{$json.message}}",
          "additionalFields": {
            "parse_mode": "Markdown"
          }
        },
        "name": "Send Lunch Error",
        "type": "n8n-nodes-base.telegram",
        "typeVersion": 1,
        "position": [1560, 220]
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "UPDATE shifts SET status = 'lunch', break_minutes = break_minutes + 60 WHERE shift_id = ?;",
          "options": {
            "parameters": "=[{{$json.shift_data.shift_id}}]"
          }
        },
        "name": "Set Lunch in MySQL",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [1560, 340]
      },
      {
        "parameters": {
          "operation": "set",
          "key": "=shift:{{$('Determine Action - FIXED').item.json.userId}}:current",
          "value": "={{JSON.stringify({ ...JSON.parse($('Check Current Shift Redis').item.json.value), status: 'lunch' })}}",
          "options": {
            "ttl": 43200
          }
        },
        "name": "Update Redis to Lunch",
        "type": "n8n-nodes-base.redis",
        "typeVersion": 1,
        "position": [1780, 340]
      },
      {
        "parameters": {
          "chatId": "={{$('Determine Action - FIXED').item.json.chatId}}",
          "text": "üçΩÔ∏è *–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞!*\\n\\n‚è∞ –û–±–µ–¥ –Ω–∞—á–∞—Ç: {{new Date().toLocaleString('ru-RU')}}\\n‚è±Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –≤—Ä–µ–º—è –æ–±–µ–¥–∞: 60 –º–∏–Ω—É—Ç\\n\\nüí° –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∏ –æ—Ç–º–µ—Ç–∏—Ç—å –æ–∫–æ–Ω—á–∞–Ω–∏–µ –æ–±–µ–¥–∞.",
          "additionalFields": {
            "parse_mode": "Markdown",
            "reply_markup": "{\n  \"inline_keyboard\": [\n    [{\"text\": \"‚úÖ –í–µ—Ä–Ω—É—Ç—å—Å—è —Å –æ–±–µ–¥–∞\", \"callback_data\": \"shift_return\"}]\n  ]\n}"
          }
        },
        "name": "Confirm Lunch Start",
        "type": "n8n-nodes-base.telegram",
        "typeVersion": 1,
        "position": [2000, 340]
      },
      {
        "parameters": {
          "jsCode": "// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å –æ–±–µ–¥–∞\nconst redisValue = $('Check Current Shift Redis').item.json.value;\n\nif (!redisValue || redisValue === null) {\n  return {\n    error: true,\n    message: '‚ùå *–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–º–µ–Ω—ã*\\n\\n–ù–∞—á–Ω–∏—Ç–µ —Å–º–µ–Ω—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.'\n  };\n}\n\ntry {\n  const shiftData = JSON.parse(redisValue);\n  \n  if (shiftData.status !== 'lunch') {\n    return {\n      error: true,\n      message: '‚ö†Ô∏è *–í—ã –Ω–µ –Ω–∞ –æ–±–µ–¥–µ*\\n\\n–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è –æ–±–µ–¥–∞.'\n    };\n  }\n  \n  return {\n    error: false,\n    shift_data: shiftData\n  };\n} catch (parseError) {\n  return {\n    error: true,\n    message: '‚ùå *–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω—ã*\\n\\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.'\n  };\n}"
        },
        "name": "Validate Return Data",
        "type": "n8n-nodes-base.code",
        "typeVersion": 1,
        "position": [1120, 480]
      },
      {
        "parameters": {
          "conditions": {
            "boolean": [
              {
                "value1": "={{$json.error}}",
                "value2": true,
                "operation": "equal"
              }
            ]
          }
        },
        "name": "Check Return Validation",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [1340, 480]
      },
      {
        "parameters": {
          "chatId": "={{$('Determine Action - FIXED').item.json.chatId}}",
          "text": "={{$json.message}}",
          "additionalFields": {
            "parse_mode": "Markdown"
          }
        },
        "name": "Send Return Error",
        "type": "n8n-nodes-base.telegram",
        "typeVersion": 1,
        "position": [1560, 420]
      },
      {
        "parameters": {
          "operation": "executeQuery",
          "query": "UPDATE shifts SET status = 'active' WHERE shift_id = ?;",
          "options": {
            "parameters": "=[{{$json.shift_data.shift_id}}]"
          }
        },
        "name": "Return from Lunch in MySQL",
        "type": "n8n-nodes-base.mySql",
        "typeVersion": 1,
        "position": [1560, 540]
      },
      {
        "parameters": {
          "operation": "set",
          "key": "=shift:{{$('Determine Action - FIXED').item.json.userId}}:current",
          "value": "={{JSON.stringify({ ...JSON.parse($('Check Current Shift Redis').item.json.value), status: 'active' })}}",
          "options": {
            "ttl": 43200
          }
        },
        "name": "Update Redis to Active",
        "type": "n8n-nodes-base.redis",
        "typeVersion": 1,
        "position": [1780, 540]
      },
      {
        "parameters": {
          "chatId": "={{$('Determine Action - FIXED').item.json.chatId}}",
          "text": "üíº *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ!*\\n\\n‚è∞ –í–æ–∑–≤—Ä–∞—Ç —Å –æ–±–µ–¥–∞: {{new Date().toLocaleString('ru-RU')}}\\nüéØ –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞\\n\\nüí™ –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã!",
          "additionalFields": {
            "parse_mode": "Markdown"
          }
        },
        "name": "Confirm Return from Lunch",
        "type": "n8n-nodes-base.telegram",
        "typeVersion": 1,
        "position": [2000, 540]
      },
      {
        "parameters": {
          "jsCode": "// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–º–µ–Ω—ã\nconst redisValue = $('Check Current Shift Redis').item.json.value;\n\nif (!redisValue || redisValue === null || redisValue === '') {\n  return { \n    text: '‚ùå *–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–º–µ–Ω—ã*\\n\\n–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–º–µ–Ω–µ. –ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—É—é —Å–º–µ–Ω—É –¥–ª—è —Ä–∞–±–æ—Ç—ã.', \n    reply_markup: { \n      inline_keyboard: [\n        [{\"text\": \"üü¢ –ù–∞—á–∞—Ç—å —Å–º–µ–Ω—É\", \"callback_data\": \"shift_start\"}]\n      ] \n    }\n  };\n}\n\ntry {\n  const redisData = JSON.parse(redisValue);\n  \n  if (!redisData.shift_id || !redisData.start_time) {\n    throw new Error('–ù–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–º–µ–Ω—ã');\n  }\n\n  const startTime = new Date(redisData.start_time);\n  const currentTime = new Date();\n  const diffMs = currentTime - startTime;\n  \n  const hoursWorked = Math.floor(diffMs / (1000 * 60 * 60));\n  const minutesWorked = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60));\n  \n  let statusText = 'üíº *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–º–µ–Ω–µ*\\n\\n';\n  statusText += `üïí –ù–∞—á–∞–ª–æ: ${startTime.toLocaleString('ru-RU')}\\n`;\n  statusText += `‚è±Ô∏è –ù–∞ —Å–º–µ–Ω–µ: ${hoursWorked}—á ${minutesWorked}–º–∏–Ω\\n`;\n  \n  let statusIcon = '';\n  let statusName = '';\n  \n  switch(redisData.status) {\n    case 'active':\n      statusIcon = 'üü¢';\n      statusName = '–ù–∞ —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ';\n      break;\n    case 'lunch':\n      statusIcon = 'üçΩÔ∏è';\n      statusName = '–ù–∞ –æ–±–µ–¥–µ';\n      break;\n    case 'break':\n      statusIcon = '‚òï';\n      statusName = '–ù–∞ –ø–µ—Ä–µ—Ä—ã–≤–µ';\n      break;\n    default:\n      statusIcon = '‚ùì';\n      statusName = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å';\n  }\n  \n  statusText += `üìç –°—Ç–∞—Ç—É—Å: ${statusIcon} ${statusName}\\n\\n`;\n  \n  let keyboard = [];\n  \n  if (redisData.status === 'active') {\n    keyboard = [\n      [{\"text\": \"üçΩÔ∏è –£–π—Ç–∏ –Ω–∞ –æ–±–µ–¥\", \"callback_data\": \"shift_lunch\"}],\n      [{\"text\": \"üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–º–µ–Ω—É\", \"callback_data\": \"shift_end\"}]\n    ];\n  } else if (redisData.status === 'lunch') {\n    keyboard = [\n      [{\"text\": \"‚úÖ –í–µ—Ä–Ω—É—Ç—å—Å—è —Å –æ–±–µ–¥–∞\", \"callback_data\": \"shift_return\"}],\n      [{\"text\": \"üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–º–µ–Ω—É\", \"callback_data\": \"shift_end\"}]\n    ];\n  } else {\n    keyboard = [\n      [{\"text\": \"üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–º–µ–Ω—É\", \"callback_data\": \"shift_end\"}]\n    ];\n  }\n  \n  return { \n    text: statusText, \n    reply_markup: { inline_keyboard: keyboard } \n  };\n  \n} catch (parseError) {\n  console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω—ã:', parseError);\n  return { \n    text: '‚ùå *–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω—ã*\\n\\n–î–∞–Ω–Ω—ã–µ —Å–º–µ–Ω—ã –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏–ª–∏ –Ω–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—É—é —Å–º–µ–Ω—É.', \n    reply_markup: { \n      inline_keyboard: [\n        [{\"text\": \"üü¢ –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Å–º–µ–Ω—É\", \"callback_data\": \"shift_start\"}]\n      ] \n    }\n  };\n}"
        },
        "name": "Format Shift Status - FIXED",
        "type": "n8n-nodes-base.code",
        "typeVersion": 1,
        "position": [1120, 680]
      },
      {
        "parameters": {
          "chatId": "={{$('Determine Action - FIXED').item.json.chatId}}",
          "text": "={{$json.text}}",
          "additionalFields": {
            "parse_mode": "Markdown",
            "reply_markup": "={{JSON.stringify($json.reply_markup)}}"
          }
        },
        "name": "Send Shift Status",
        "type": "n8n-nodes-base.telegram",
        "typeVersion": 1,
        "position": [1340, 680],
        "credentials": {
          "telegramApi": {
            "id": "telegram-bot-credentials",
            "name": "Telegram Bot –êAC"
          }
        }
      }
    ],
    "connections": {
      "Start": {
        "main": [[{"node": "Determine Action - FIXED", "type": "main", "index": 0}]]
      },
      "Determine Action - FIXED": {
        "main": [[{"node": "Check Current Shift Redis", "type": "main", "index": 0}]]
      },
      "Check Current Shift Redis": {
        "main": [[{"node": "Route Shift Action", "type": "main", "index": 0}]]
      },
      "Route Shift Action": {
        "main": [
          [{"node": "Check Existing Active Shift", "type": "main", "index": 0}],
          [{"node": "Validate End Shift Data", "type": "main", "index": 0}],
          [{"node": "Validate Lunch Data", "type": "main", "index": 0}],
          [{"node": "Validate Return Data", "type": "main", "index": 0}],
          [{"node": "Format Shift Status - FIXED", "type": "main", "index": 0}]
        ]
      },
      "Check Existing Active Shift": {
        "main": [[{"node": "Check Has Active Shift", "type": "main", "index": 0}]]
      },
      "Check Has Active Shift": {
        "main": [
          [{"node": "Send Already Active Error", "type": "main", "index": 0}],
          [{"node": "Start New Shift MySQL", "type": "main", "index": 0}]
        ]
      },
      "Start New Shift MySQL": {
        "main": [[{"node": "Get New Shift Info", "type": "main", "index": 0}]]
      },
      "Get New Shift Info": {
        "main": [[{"node": "Cache New Shift Data", "type": "main", "index": 0}]]
      },
      "Cache New Shift Data": {
        "main": [[{"node": "Format Shift Status - FIXED", "type": "main", "index": 0}]]
      },
      "Validate End Shift Data": {
        "main": [[{"node": "Check End Validation", "type": "main", "index": 0}]]
      },
      "Check End Validation": {
        "main": [
          [{"node": "Send End Error", "type": "main", "index": 0}],
          [{"node": "End Shift MySQL - FIXED", "type": "main", "index": 0}]
        ]
      },
      "End Shift MySQL - FIXED": {
        "main": [[{"node": "Delete Shift from Redis", "type": "main", "index": 0}]]
      },
      "Delete Shift from Redis": {
        "main": [[{"node": "Notify Shift End - ENHANCED", "type": "main", "index": 0}]]
      },
      "Validate Lunch Data": {
        "main": [[{"node": "Check Lunch Validation", "type": "main", "index": 0}]]
      },
      "Check Lunch Validation": {
        "main": [
          [{"node": "Send Lunch Error", "type": "main", "index": 0}],
          [{"node": "Set Lunch in MySQL", "type": "main", "index": 0}]
        ]
      },
      "Set Lunch in MySQL": {
        "main": [[{"node": "Update Redis to Lunch", "type": "main", "index": 0}]]
      },
      "Update Redis to Lunch": {
        "main": [[{"node": "Confirm Lunch Start", "type": "main", "index": 0}]]
      },
      "Validate Return Data": {
        "main": [[{"node": "Check Return Validation", "type": "main", "index": 0}]]
      },
      "Check Return Validation": {
        "main": [
          [{"node": "Send Return Error", "type": "main", "index": 0}],
          [{"node": "Return from Lunch in MySQL", "type": "main", "index": 0}]
        ]
      },
      "Return from Lunch in MySQL": {
        "main": [[{"node": "Update Redis to Active", "type": "main", "index": 0}]]
      },
      "Update Redis to Active": {
        "main": [[{"node": "Confirm Return from Lunch", "type": "main", "index": 0}]]
      },
      "Format Shift Status - FIXED": {
        "main": [[{"node": "Send Shift Status", "type": "main", "index": 0}]]
      }
    }
  }
